@model IEnumerable<LIMS.WebApp.ViewModels.InvoiceViewModels.InvoiceViewModel>

@using Microsoft.AspNetCore.Identity
@using LIMS.Infrastructure.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@{
	ViewData["Title"] = "Index";
}

@{
	ApplicationUser user = await UserManager.FindByNameAsync(User.Identity.Name);
}

<div class="">
	<ol class="breadcrumb">
		<li class="breadcrumb-item">
			<a asp-controller="Home" asp-action="Index">Home</a>
		</li>
		<li class="breadcrumb-item">
			<a asp-controller="Properties" asp-action="Properties">my-properties</a>
		</li>
		<li class="breadcrumb-item active">property-invoices</li>
	</ol>
</div>


<h4 class="text-muted">My Invoices</h4>

@if (await UserManager.IsInRoleAsync(user, "Administrators"))
{
	<a class=" btn btn-sm btn-primary mb-2" asp-action="Create"><i class="fa fa-plus-square"></i> New Invoice</a>
}



<table class="table table-sm table-responsive-md table-bordered table-condensed">
	<thead class="thead-light">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.InvoiceNumber)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.InvoiceAmount)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.DateCreated)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.DateDue)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ParcelNumber)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Status)
			</th>

			<th>Actions</th>
		</tr>
	</thead>
	<tbody class="">
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.InvoiceNumber)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.InvoiceAmount)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DateCreated)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DateDue)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ParcelNumber)
				</td>

				@if (item.Status == "Paid")
				{
					<td>
						<span class="btn btn-sm btn-success"><i class="fa fa-check-circle"></i> Paid</span>
					</td>
				}
				else
				{
					<td>
						<span class="btn btn-sm btn-danger"><i class="fa fa-times-circle"></i> Not Paid</span>
					</td>
				}

				
					<td>
						<a asp-action="Details" data-tippy="Invoice Details" asp-route-id="@item.InvoiceID"><i class="fa fa-clipboard-list"></i></a>

						@if (item.Status != "Paid")
						{
							<a data-tippy="Make Payment" href="@Url.Action("checkout", "Payments", new { property = item.ParcelNumber, invoicenumber = item.InvoiceNumber })" class="text-warning">
								<i class="fa fa-money-bill-alt"></i>
							</a>
						}


						@if (await UserManager.IsInRoleAsync(user, "Administrators"))
						{
							<a data-tippy="Edit Invoice" asp-action="Edit" asp-route-id="@item.InvoiceID"><i class="fa fa-pen"></i></a>

							<a data-tippy="Delete Invoice" asp-action="Delete" class="text-danger" asp-route-id="@item.InvoiceID"><i class="fa fa-trash-alt"></i></a>
						}
					</td>
			</tr>
		}
	</tbody>
</table>
